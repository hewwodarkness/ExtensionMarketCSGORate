function addCopyButton() {
  let spanElems = document.querySelectorAll(
    ".market_commodity_orders_header_promote"
  );

  if (spanElems.length > 1) {
    let spanElem = spanElems[1]; // –í–∏–±—Ä–∞—Ç–∏ –¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–Ω–æ–ø–∫–∞ –≤–∂–µ —ñ—Å–Ω—É—î
    if (
      !spanElem.nextElementSibling ||
      spanElem.nextElementSibling.textContent !== "–ö–æ–ø—ñ—é–≤–∞—Ç–∏"
    ) {
      let copyButton = document.createElement("button");
      copyButton.textContent = "–ö–æ–ø—ñ—é–≤–∞—Ç–∏";

      // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç–∏–ª—ñ–≤ –¥–ª—è –∫–Ω–æ–ø–∫–∏
      copyButton.style.marginLeft = "10px";
      copyButton.style.backgroundColor = "#4CAF50";
      copyButton.style.border = "none";
      copyButton.style.color = "white";
      copyButton.style.padding = "5px 10px";
      copyButton.style.textAlign = "center";
      copyButton.style.textDecoration = "none";
      copyButton.style.display = "inline-block";
      copyButton.style.fontSize = "14px";
      copyButton.style.borderRadius = "4px";
      copyButton.style.cursor = "pointer";
      copyButton.style.transitionDuration = "0.4s";
      copyButton.onmouseover = function () {
        this.style.backgroundColor = "#45a049";
      };
      copyButton.onmouseout = function () {
        this.style.backgroundColor = "#4CAF50";
      };

      copyButton.onclick = function () {
        let numberString = spanElem.textContent
          .trim()
          .replace("‚Ç¥", "")
          .replace(/,/g, ".")
          .replace(" ", "");
        let copyText = document.createElement("textarea");
        document.body.appendChild(copyText);
        copyText.value = numberString;
        copyText.select();
        document.execCommand("copy");
        document.body.removeChild(copyText);
        // alert('–ß–∏—Å–ª–æ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!');
      };

      spanElem.parentElement.appendChild(copyButton);
    }
  }
}

function addCopyButtonForPrice() {
  let priceDivs = document.querySelectorAll(".price_with");

  priceDivs.forEach((priceDiv) => {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–Ω–æ–ø–∫–∞ –≤–∂–µ —ñ—Å–Ω—É—î –ø–æ—Ä—è–¥ –∑ —Ü–∏–º –µ–ª–µ–º–µ–Ω—Ç–æ–º
    if (
      !priceDiv.nextElementSibling ||
      priceDiv.nextElementSibling.textContent !== "üìã"
    ) {
      let copyButton = document.createElement("button");
      copyButton.textContent = "üìã"; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–∫–æ–Ω–∫—É –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É

      // –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏
      copyButton.style.marginLeft = "5px";
      copyButton.style.backgroundColor = "transparent";
      copyButton.style.border = "none";
      copyButton.style.color = "#4CAF50";
      copyButton.style.padding = "0px 5px";
      copyButton.style.textAlign = "center";
      copyButton.style.textDecoration = "none";
      copyButton.style.display = "inline-block";
      copyButton.style.fontSize = "14px";
      copyButton.style.borderRadius = "4px";
      copyButton.style.cursor = "pointer";

      copyButton.onclick = function () {
        let numberString = priceDiv.textContent
          .trim()
          .replace("‚Ç¥", "")
          .replace(/,/g, ".");
        let modifiedNumber = (parseFloat(numberString) - 0.01).toFixed(2);
        let finalString = modifiedNumber + " ";  // –î–æ–¥–∞—Ç–∏ –ø—Ä–æ–±—ñ–ª –Ω–∞ –∫—ñ–Ω—Ü—ñ
    
        let copyText = document.createElement("textarea");
        document.body.appendChild(copyText);
        copyText.value = finalString;
        copyText.select();
        document.execCommand("copy");
        document.body.removeChild(copyText);
      };

      // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –ø—ñ—Å–ª—è —Ç–µ–∫—Å—Ç—É –≤ priceDiv
      priceDiv.parentElement.insertBefore(copyButton, priceDiv.nextSibling);
    }
  });
}

function addPasteButtonForInput() {
  let inputElems = document.querySelectorAll(
    'input[name="market_sell_currency_input"]'
  );

  if (inputElems.length > 1) {
    let inputElem = inputElems[1]; // –í–∏–±—Ä–∞—Ç–∏ –¥—Ä—É–≥–∏–π –µ–ª–µ–º–µ–Ω—Ç

    if (
      !inputElem.nextElementSibling ||
      inputElem.nextElementSibling.textContent !== "üìã"
    ) {
      let pasteButton = document.createElement("button");
      pasteButton.textContent = "üìã";

      // –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏
      pasteButton.style.marginLeft = "5px";
      pasteButton.style.backgroundColor = "transparent";
      pasteButton.style.border = "none";
      pasteButton.style.color = "#4CAF50";
      pasteButton.style.padding = "0px 5px";
      pasteButton.style.textAlign = "center";
      pasteButton.style.textDecoration = "none";
      pasteButton.style.display = "inline-block";
      pasteButton.style.fontSize = "14px";
      pasteButton.style.borderRadius = "4px";
      pasteButton.style.cursor = "pointer";
      pasteButton.style.transitionDuration = "0.4s";
      pasteButton.onmouseover = function () {
        this.style.color = "#45a049";
      };
      pasteButton.onmouseout = function () {
        this.style.color = "#4CAF50";
      };


      function triggerEvents(element) {
        const events = ['keyup', 'keydown', 'keypress', 'input', 'change'];
        for (let ev of events) {
            let event = new Event(ev, {
                'bubbles': true,
                'cancelable': true
            });
            element.dispatchEvent(event);
        }
    }

      pasteButton.onclick = function() {
        navigator.clipboard.readText()
          .then(text => {
              inputElem.value = text; // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, —â–æ inputElem - —Ü–µ –≤–∞—à –µ–ª–µ–º–µ–Ω—Ç "Buyer pays"
              
              // –í–∏–∫–ª–∏–∫ –ø–æ–¥—ñ–π
              triggerEvents(inputElem);
          })
          .catch(err => {
              console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É:', err);
          });
    }
    
    inputElem.parentElement.insertBefore(pasteButton, inputElem.nextSibling);
    
    }
  }
}

function addCopyButtonForTd() {
  let tdElems = document.querySelectorAll('td[align="right"]');

  tdElems.forEach(tdElem => {
      if (!tdElem.nextElementSibling || tdElem.nextElementSibling.textContent !== "üìã") {
          let copyButton = document.createElement('button');
          copyButton.textContent = "üìã";

          // –°—Ç–∏–ª—ñ –¥–ª—è –∫–Ω–æ–ø–∫–∏
          copyButton.style.marginLeft = '5px';
          copyButton.style.backgroundColor = 'transparent';
          copyButton.style.border = 'none';
          copyButton.style.color = '#4CAF50';
          copyButton.style.padding = '0px 5px';
          copyButton.style.textAlign = 'center';
          copyButton.style.textDecoration = 'none';
          copyButton.style.display = 'inline-block';
          copyButton.style.fontSize = '14px';
          copyButton.style.borderRadius = '4px';
          copyButton.style.cursor = 'pointer';
          copyButton.style.transitionDuration = '0.4s';
          copyButton.onmouseover = function() { this.style.color = '#45a049'; }
          copyButton.onmouseout = function() { this.style.color = '#4CAF50'; }

          copyButton.onclick = function() {
              let numberString = tdElem.textContent
                  .trim()
                  .replace("‚Ç¥", "")
                  .replace(/,/g, ".");

              let copyText = document.createElement("textarea");
              document.body.appendChild(copyText);
              copyText.value = numberString;
              copyText.select();
              document.execCommand("copy");
              document.body.removeChild(copyText);
          }

          // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –ø—ñ—Å–ª—è —Ç–µ–∫—Å—Ç—É –≤ tdElem
          tdElem.appendChild(copyButton);
      }
  });
}

function insertCustomDiv() {
  // –ü–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑–∞ –∫–ª–∞—Å–æ–º
  var element = document.querySelector('.item-price.ng-star-inserted');

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∑–Ω–∞–π–¥–µ–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
  if (element) {
    console.log('–ï–ª–µ–º–µ–Ω—Ç –∑–Ω–∞–π–¥–µ–Ω–æ:', element);

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ div
    var newDiv = document.createElement('div');
    var newDiv2= document.createElement('div');
    var newDiv3= document.createElement('div');

    newDiv.classList.add('custom-div');
    newDiv2.classList.add('custom-div');
    newDiv3.classList.add('custom-div');
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É
    var inputField1 = document.createElement('input');
    inputField1.placeholder = '–í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ';

    var inputButton = document.createElement('button');
    inputButton.textContent = '–í—Å—Ç–∞–≤–∏—Ç–∏ —á–∏—Å–ª–æ';
    inputButton.className = 'mat-focus-indicator spinner add mat-flat-button mat-button-base mat-primary ng-star-inserted';

    var inputField2 = document.createElement('input');
    inputField2.disabled = true; // –í–∏–º–∫–Ω–µ–º–æ –ø–æ–ª–µ, –ø–æ–∫–∏ –Ω–µ –±—É–¥–µ –≤–≤–µ–¥–µ–Ω–æ —á–∏—Å–ª–æ

    var inputField11 = document.createElement('input');
    inputField11.disabled = true;

    var inputField22 = document.createElement('input');
    inputField22.disabled = true;

    var inputField111 = document.createElement('input');
    inputField111.disabled = true;

    var inputField222 = document.createElement('input');
    inputField222.disabled = true;

    // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –ø–æ–ª—è
    function handleInputChange() {
      var inputValue = parseFloat(inputField1.value);
      var priceValue = parseFloat(element.querySelector('.ng-star-inserted').textContent.replace('‚ÇΩ', '').replace(',', ''));
    
      if (!isNaN(inputValue) && !isNaN(priceValue)) {
          inputField2.value = 'Rate: ' + (priceValue * 0.95 / inputValue).toFixed(2) + ' ';
    
          inputField11.value = '‚ÇΩ' + (priceValue - (priceValue * 0.05)).toFixed(2);
          inputField111.value = '‚ÇΩ' + (priceValue - (priceValue * 0.10)).toFixed(2);
    
          inputField22.value = 'Rate: ' + ((priceValue - (priceValue * 0.05)) * 0.95 / inputValue).toFixed(2) + ' ';
          inputField222.value = 'Rate: ' + ((priceValue - (priceValue * 0.10)) * 0.95 / inputValue).toFixed(2) + ' ';
      } else {
          inputField2.value = '';
      }
    }
  
    inputField1.addEventListener('input', handleInputChange);

    inputButton.onclick = function() {
      navigator.clipboard.readText()
          .then(text => {
              inputField1.value = text;

              var event = new Event('input', {
                'bubbles': true,
                'cancelable': true
            });
            inputField1.dispatchEvent(event);
            
          })
          .catch(err => {
              console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É:', err);
          });
  }
    
    
    // –î–æ–¥–∞—î–º–æ –ø–æ–ª—è –¥–æ –Ω–æ–≤–æ–≥–æ div
    newDiv.appendChild(inputButton);
    newDiv.appendChild(inputField1);
    newDiv.appendChild(inputField2);

    newDiv2.appendChild(inputField11);
    newDiv2.appendChild(inputField22);

    newDiv3.appendChild(inputField111);
    newDiv3.appendChild(inputField222);
    // –í—Å—Ç–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ div –ø—ñ—Å–ª—è –∑–Ω–∞–π–¥–µ–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
    element.parentNode.insertBefore(newDiv3, element.nextSibling);
    element.parentNode.insertBefore(newDiv2, element.nextSibling);
    element.parentNode.insertBefore(newDiv, element.nextSibling);
    

  } else {
    console.log('–ï–ª–µ–º–µ–Ω—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    setTimeout(insertCustomDiv, 500);
  }
};

function setupObserver() {
  // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á
  var observer = new MutationObserver(function(mutationsList, observer) {
    for (var mutation of mutationsList) {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –¥–æ–¥–∞–Ω–∏–π –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
      if (mutation.addedNodes.length > 0) {
        for (var node of mutation.addedNodes) {
          if (node.matches && node.matches('.item-price.ng-star-inserted')) {
            // –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç, –≤–∏–∫–ª–∏–∫–∞—î–º–æ –≤–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é
            insertCustomDiv();
            break;
          }
        }
      }
    }
  });

  // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á –Ω–∞ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–æ body
  observer.observe(document.body, { childList: true, subtree: true });
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞
setupObserver();

// –î–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –≤—ñ–¥—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å–∫—Ä–∏–ø—Ç–∞
addCopyButton();
addCopyButtonForPrice();
addPasteButtonForInput();
// addCopyButtonForTd();

// –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω —É DOM —ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∑–º—ñ–Ω–∞—Ö
let observer = new MutationObserver(() => {
  addCopyButton();
  addCopyButtonForPrice();
  addPasteButtonForInput();
  // addCopyButtonForTd();
});
observer.observe(document.body, { childList: true, subtree: true });
